2019110571
田相新
A4Q1
class MyTxt():

    def __init__(self, path):
        self.path = path
        with open(self.path, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        self.lines = lines

    def get_wdnum(self):
        count = 0
        for i in self.lines:
            i = i.strip()
            i_list = i.split(' ')
            a = len(i_list)
            count += a
        return count

    def record_num(self, file_name):
        num = self.get_wdnum()
        path = f'./{file_name}'
        with open(path, 'w', encoding='utf-8') as f:
            f.write(str(num))


a = MyTxt('./Harry_Potter.txt')
a.get_wdnum()
a.record_num('Count_Words.txt')
A4Q2
import math
import matplotlib.pyplot as plt


def threepoints(points):
    point1 = points[0]
    point2 = points[1]
    point3 = points[2]

    distance1 = math.sqrt((point1[0] - point2[0]) ** 2 + (point1[1] - point2[1]) ** 2)
    distance2 = math.sqrt((point1[0] - point3[0]) ** 2 + (point1[1] - point3[1]) ** 2)
    distance3 = math.sqrt((point2[0] - point3[0]) ** 2 + (point2[1] - point3[1]) ** 2)
    dis_list = [distance1, distance2, distance3]
    dis_list.sort()
    if (dis_list[0] + dis_list[1]) == dis_list[2]:
        print('They lie on a straight line.')
    else:
        plt.figure(figsize=(8, 8))
        plt.plot([point1[0], point2[0]], [point1[1], point2[1]])
        plt.plot([point1[0], point3[0]], [point1[1], point3[1]])
        plt.plot([point3[0], point2[0]], [point3[1], point2[1]])
        plt.show()
A4Q3
import csv
from plotly.graph_objs import Layout, Bar
from plotly import offline

file_name = './midterm.csv'


def get_grades(file_name):
    mid_term = []
    with open(file_name, 'r', encoding='utf-8') as f:
        reader = csv.reader(f)
        header_row = next(reader)
        for index, value in enumerate(reader):
            mid_term.append(float(value[1]))
    return mid_term


mid_term = get_grades(file_name)

midterm_A = [x for x in mid_term if x >= 90 and x <= 100]
midterm_B = [x for x in mid_term if x >= 80 and x < 90]
midterm_C = [x for x in mid_term if x >= 70 and x < 80]
midterm_D = [x for x in mid_term if x >= 60 and x < 70]
midterm_F = [x for x in mid_term if x < 60]

y = [len(i) for i in [midterm_A, midterm_B, midterm_C, midterm_D, midterm_F]]
x = [1, 2, 3, 4, 5]

data = [Bar(x=x, y=y)]
x_axis_config = {'title': 'class'}
y_axis_config = {'title': 'count'}
my_layout = Layout(title='mid_term grades classification',
                   xaxis=dict(
                       tickmode='array',
                       tickvals=[1, 2, 3, 4, 5],
                       ticktext=['A', 'B', 'C', 'D', 'F']
                   ),
                   yaxis=y_axis_config)
offline.plot({'data': data, 'layout': my_layout}, filename='myhist.html')
A4Q4
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

ds = pd.read_json('./data.json')
ds.columns = ('date', 'place', 'expense')
dd = ds[['place', 'expense']]
aa = dd.groupby('place').count()
plt.figure(figsize=(8,5))
plt.style.use('seaborn')
plt.rcParams['font.sans-serif'] = ['Arial Unicode MS']
plt.xticks(np.arange(len(list(aa.index))), list(aa.index), rotation=45, fontsize=8)
plt.title('Frequency to different canteens')
plt.xlabel('Canteen')
plt.ylabel('Frequency')
plt.tight_layout()
plt.bar(aa.index, list(aa['expense']))
plt.show()
A4Q5
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime

ds = pd.read_json('./data.json')
ds.columns = ('date', 'place', 'expense')
date_col = list(ds['date'])


def strtime(a):
    b = datetime.strptime(a, "%m/%d/%Y")
    b = b.strftime("%Y-%m-%d")
    return b


date_col = map(strtime, date_col)
ds['date'] = list(date_col)
_ = ds['expense']
ds['expense'] = -_
dd = ds[['date', 'expense']]
aa = dd.groupby('date').sum()
plt.figure(figsize=(8,5))
plt.style.use('seaborn')
plt.rcParams['font.sans-serif'] = ['Arial Unicode MS']
plt.xticks(np.arange(len(list(aa.index))), list(aa.index), rotation=45, fontsize=6)
plt.tight_layout()
plt.title('Daily consumption in April')
plt.xlabel('Date')
plt.ylabel('Consumption')
plt.plot(aa.index, aa['expense'])
plt.show()
A4Q6
# 使用了（Year,Medal,Event,Sex,Team,Name）这几列数据，得到了如下四个结论：
# 1、通过fig1可以看出奖牌数量与项目数量大致是成正比关系，随着时间推移奥运会项目越来越多，每一届能够诞生的奖牌也逐渐增加，
#   但是还可以看出在1994年开始举办冬季奥运会之后，曲线呈锯齿状，因为冬奥会的项目要显著少于夏季奥运会，奖牌量自然也远小于夏季奥运会
#   同时，因为将奥运会分成了夏季与冬季，在1994年后，奥运会的奖牌数有一个明显的下降。
# 2、通过fig2可以看到，除了第一借奥运会没有女性参加，在其他所有奥运会中，男性奖牌获得数总是高于女性的
#    这可以说明女子项目的数量依然是明显少于男子项目的，但是近些年来，可以看到，这种差距在逐渐变小
# 3、通过fig3可以看到，这里获得奖牌最多的国家是美国，总数有第二名前苏联的两倍之多，达到了5219枚，而紧随其后的9个国家则是相差并不大
#   从第二的前苏联2451枚，到第10的加拿大有1243枚。从上榜国家也可以看出，累积获得奖牌最多的这些国家，除了前苏联，无一不是
#   传统资本主义强国。这也显示了一个国家的奥林匹克竞赛表现，很有可能与其经济发展情况、国力有着很大的联系。
# 4、通过fig4，可以看到，产生奖牌数最多的运动大多为足球、冰球、曲棍球这些在世界上影响范围极广，尤其是在资本主义国家极其流行的运动
#    除此之外田径类、游泳类也有一席之地。总而言之，产生奖牌的数量与一项运动的影响力、重要程度呈一定的正比关系。
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder

df = pd.read_csv('./athlete_events.csv')
df.head()
col_names = df.columns
# 查看每列数据的数据类型以及其非空值的个数
df.info()
# 对非数值类型的变量进行编码，因为这里不涉及数值算法计算，因此不进行one_hot编码
# 需要进行编码的列有：Sex、Team、Event、Medal
df_pre = df[['Sex', 'Team', 'Event', 'Medal']]
pre_columns = df_pre.columns
class_name = []
for i in pre_columns:
    le = LabelEncoder()
    date_pre = df_pre[i]
    df_pre[i] = le.fit_transform(date_pre)
    sub_class = le.classes_
    class_name.append(sub_class)
# 统计每一列的不同值
df_pre.nunique(axis=0)

"""
数据分析目标：
一、统计这些年间项目数量的变化和奖牌数量进行对比（线图）
二、男女性获得奖牌的比例，随年份，体现男女平等的变化（线图）
三、这些年来获得奖牌最多的10个国家（柱状图）
四、这些年诞生奖牌最多的10个运动项目（柱状图）
"""
# 准备数据
# 一.1、总奖牌数量的变化,提取出年份与奖牌这两列
df1 = df[['Year', 'Medal']]
df1 = df1.groupby('Year').count()
# 一.2、项目的数量变化，提取出年份与项目数量这两列
df2 = df[['Year', 'Event']]
df2 = df2.drop_duplicates(subset=['Event', 'Year'], keep='first', inplace=False)
df2 = df2.groupby('Year').count()
# 二.1、提取出时间与性别两列
df3 = df[['Year', 'Sex']]
df3_Female = df3.loc[df['Sex'] == 'F']
df3_Female = df3_Female.groupby('Year').count()
df3_Male = df3.loc[df['Sex'] == 'M']
df3_Male = df3_Male.groupby('Year').count()
# 三.1、提取出Team和Medal两列
df4 = df[['Team', 'Medal']]
df4 = df4.groupby('Team').count().sort_values(by='Medal', ascending=False)
df4_top10 = df4.iloc[0:9, :]
# 四.1、取出'Medal'，'Event'这两列
df5 = df[['Medal', 'Event', 'Name']]
df5 = df5.drop_duplicates(subset=['Event', 'Name'], keep='first', inplace=False)
df5 = df5.groupby('Event').count().sort_values(by='Medal', ascending=False)
df5 = df5.drop('Name', axis=1)
df5_top10 = df5.iloc[0:9, :]


# 绘图：
def show_fig():
    plt.figure(figsize=(10, 10))
    # fig1
    plt.subplot(2, 2, 1)
    plt.style.use('seaborn')
    plt.plot(df1.index, df1['Medal'])
    plt.plot(df1.index, df2['Event'])
    plt.xlabel('Year')
    plt.ylabel('Num of Medal')
    plt.title('Fig1:Year-Num of Medal')
    plt.tight_layout()
    # fig2
    plt.subplot(2, 2, 2)
    plt.style.use('seaborn')
    plt.plot(df3_Female.index, df3_Female['Sex'])
    plt.plot(df3_Male.index, df3_Male['Sex'])
    plt.legend(['Female', 'Male'])
    plt.xlabel('Year')
    plt.ylabel('Medal number')
    plt.title('Fig2:Relationship between genders and number of medal')
    plt.tight_layout()
    # fig3

    plt.subplot(2, 2, 3)
    plt.style.use('seaborn')
    plt.bar(df4_top10.index, df4_top10['Medal'])
    plt.xlabel('Country')
    plt.ylabel('Num of Medal')
    plt.xticks(np.arange(len(list(df4_top10.index))), list(df4_top10.index), rotation=45, fontsize=6)
    plt.title('Fig3:Top10 Olympics Countries')
    plt.tight_layout()
    # fig4
    plt.subplot(2, 2, 4)
    plt.style.use('seaborn')
    plt.bar(df5_top10.index, df5_top10['Medal'])
    plt.xlabel('Events')
    plt.ylabel('Num of Medal')
    plt.title('Fig4:Top10 Olympics Events')
    plt.xticks(np.arange(len(list(df5_top10.index))), list(df5_top10.index), rotation=45, fontsize=6)
    plt.tight_layout()
    plt.show()


show_fig()
"""
解释：
（Fig1）
一：通过这张图可以看出奖牌数量与项目数量大致是成正比关系，随着时间推移奥运会项目越来越多，每一届能够诞生的奖牌也逐渐增加，
   但是还可以看出在1994年开始举办冬季奥运会之后，曲线呈锯齿状，因为冬奥会的项目要显著少于夏季奥运会，奖牌量自然也远小于夏季奥运会
   同时，因为将奥运会分成了夏季与冬季，在1994年后，奥运会的奖牌数有一个明显的下降。
（Fig2）
二：这里可以看到，除了第一借奥运会没有女性参加，在其他所有奥运会中，男性奖牌获得数总是高于女性的
   这可以说明女子项目的数量依然是明显少于男子项目的，但是近些年来，可以看到，这种差距在逐渐变小
（Fig3）
三：可以看到，这里获得奖牌最多的国家是美国，总数有第二名前苏联的两倍之多，达到了5219枚，而紧随其后的9个国家则是相差并不大
   从第二的前苏联2451枚，到第10的加拿大有1243枚。从上榜国家也可以看出，累积获得奖牌最多的这些国家，除了前苏联，无一不是
   传统资本主义强国。这也显示了一个国家的奥林匹克竞赛表现，很有可能与其经济发展情况、国力有着很大的联系。
（Fig4）
四：通过第四幅图，可以看到，产生奖牌数最多的运动大多为足球、冰球、曲棍球这些在世界上影响范围极广，尤其是在资本主义国家极其流行的运动
   除此之外田径类、游泳类也有一席之地。总而言之，产生奖牌的数量与一项运动的影响力、重要程度呈一定的正比关系。
"""

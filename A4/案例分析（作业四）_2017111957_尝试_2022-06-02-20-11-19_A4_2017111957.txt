2017111957
贺斯文
A4Q1
with open('Harry_Potter.txt') as file_object:
 contents = file_object.read() # string
 counts = 0
 words = contents.split()
 for word in words:
        counts = counts + 1
filename = 'Count_Words.txt'
with open(filename, 'w') as file_object:
    file_object.write("There are {} words in the file.".format(counts))
A4Q2
import matplotlib.pyplot as plt
n = [[1,1],[2,2],[3,3]]
m = [[1,1],[2,3],[4,2]]
def threepoints(n):
    x1 = n[0][0]
    y1 = n[0][1]
    x2 = n[1][0]
    y2 = n[1][1]
    x3 = n[2][0]
    y3 = n[2][1]     
    a = x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)
    if (a == 0):
        print ("They lie on a straight line.")
    else:
        x_values = [x1,x2]
        y_values = [y1,y2]
        plt.scatter(x_values,y_values,s=1)
        plt.plot(x_values,y_values,color = 'blue')
        x_values = [x2,x3]
        y_values = [y2,y3]
        plt.scatter(x_values,y_values,s=1)
        plt.plot(x_values,y_values,color = 'orange')
        x_values = [x1,x3]
        y_values = [y1,y3]
        plt.scatter(x_values,y_values,s=1)
        plt.plot(x_values,y_values,color = 'green')
        print ("They don't lie on a straight line")  
threepoints(m)
A4Q3
import csv
filename = 'midterm.csv'
with open(filename) as f:
    reader = csv.reader(f)
    header_row = next(reader)   
    scores = []
    for row in reader:
        high = float(row[1])
        scores.append(high)
    ranks = []
    for score in scores:
        if score <= 100 and score >=90:
            ranks.append('A')
        if score >=80 and score < 90:
            ranks.append('B')
        if score >= 70 and score < 80:
            ranks.append('C')
        if score < 70 and score >= 60:
            ranks.append('D')
        if score < 60:
            ranks.append('F')
rank = ['A','B','C','D','F']
frequencies = []
for value in rank:
    result = ranks.count(value)
    frequencies.append(result)
print(frequencies)
from plotly.graph_objs import Bar, Layout
from plotly import offline
x_values = rank
data=[Bar(x=x_values,y=frequencies)]
x_axis_config={'title': 'Ranks'}
y_axis_config={'title': 'frequencies'}
my_layout=Layout(title='midterm ranks',
xaxis=x_axis_config, yaxis=y_axis_config)
offline.plot({'data':data,'layout':my_layout},filename='d6.html')
A4Q4
import json
filename = 'data.json'
with open(filename,encoding='utf-8') as f:
    btc_data = json.load(f)
    canteens = []
for btc_dict in btc_data:
    date = btc_dict[0]
    canteen = btc_dict[1]
    csp = btc_dict[2]
    canteens.append(canteen)
frequence = {}
for cant in canteens:
    frequence[cant] = frequence.get(cant,0)+1
cants = []
for place in frequence.keys():
    cants.append(place)
frequences = []
for time in frequence.values():
    frequences.append(time)
from plotly.graph_objs import Bar, Layout
from plotly import offline
x_values = cants
data=[Bar(x=x_values,y=frequences)]
x_axis_config={'title': 'canteens'}
y_axis_config={'title': 'frequences'}
my_layout=Layout(title='March',
xaxis=x_axis_config, yaxis=y_axis_config)
offline.plot({'data':data,'layout':my_layout},filename='d6.html')
A4Q5
import json
from datetime import datetime
from matplotlib import pyplot as plt
filename = 'data.json'
with open(filename,encoding='utf-8') as f:
    btc_data = json.load(f)
    dates = [];csps = []
for btc_dict in btc_data:
    date = btc_dict[0]
    canteen = btc_dict[1]
    csp = btc_dict[2]
    csps.append(csp)
    current_date = datetime.strptime(btc_dict[0], "%m/%d/%Y")
    order_date = current_date.strftime('%d/%m/%Y')
    dates.append(order_date)
zipped = zip(dates,csps)
dic = {}
for x, y in sorted(zip(dates,csps)):
    z = float(y)
    dic[x] = dic.get(x,0) + z
print(dic)
ndate = []
ncsp = []
for day in dic.keys():
    ndate.append(day)
for money in dic.values():
    ncsp.append(money)
print(ndate)
print(ncsp)
plt.style.use('seaborn')
fig, ax = plt.subplots()
fig.autofmt_xdate()
ax.plot(ndate, ncsp, c='green')
A4Q6
#I choose row14 an row7 ,to analyze the number of gold Medal which different countries have ever got and rank them.
#I get a historic gold metdal rank.
import csv
filename = 'athlete_events.csv'
with open(filename) as f:
    reader = csv.reader(f)
    header_row = next(reader)
    countrys,medals=[],[]
    for row in reader:
        medal = row[14]
        medals.append(medal) 
        country = row[7]
        countrys.append(country)              
    goldcountry = []
    frequencies = []
    for x, y in zip(countrys,medals):
        if y == "Gold":
            goldcountry.append(x)
    dic = {}
    for cont in goldcountry:
        dic[cont] = dic.get(cont,0)+1   
    key = []
    value = []
    x_data = []
    y_data = []
    for cont in dic.keys():
        key.append(cont)
    for unmbers in dic.values():
        value.append(unmbers)
    for x , y in sorted(zip(value,key),reverse=True):
        x_data.append(y)
        y_data.append(x)    
from plotly.graph_objs import Bar, Layout
from plotly import offline
x_values = x_data
data=[Bar(x=x_data,y=y_data)]
x_axis_config={'title': 'Country name'}
y_axis_config={'title': 'Gold got'}
my_layout=Layout(title='Historic gold rank',
xaxis=x_axis_config, yaxis=y_axis_config)
offline.plot({'data':data,'layout':my_layout},filename='d6.html')  